//===- P2InstPrinter.h - Convert P2 MCInst to assembly syntax -*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file contains the declaration of the P2InstPrinter class,
// which is used to print P2 MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_P2_P2INSTPRINTER_H
#define LLVM_LIB_TARGET_P2_P2INSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

    class P2InstPrinter : public MCInstPrinter {

        const MCRegisterInfo &MRI;
        const MCInstrInfo &MII;

        void printOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);
        void printOperand(const MCInst *MI, uint64_t addr, unsigned OpNo,raw_ostream &O);

        void printCondition(const MCInst *MI, int OpNum, raw_ostream &O);
        void printEffect(const MCInst *MI, int OpNum, raw_ostream &O);

    public:

        P2InstPrinter(const MCAsmInfo &MAI,
                        const MCInstrInfo &_MII,
                        const MCRegisterInfo &_MRI): MCInstPrinter(MAI, _MII, _MRI), MRI(_MRI), MII(_MII) {}

        // Autogenerated by tblgen.
        void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
        static const char *getRegisterName(unsigned RegNo);

        void printRegName(raw_ostream &OS, unsigned RegNo) const override;
        void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                        const MCSubtargetInfo &STI, raw_ostream &O) override;

        std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
    };
} // end namespace llvm

#endif // LLVM_LIB_TARGET_P2_P2INSTPRINTER_H
